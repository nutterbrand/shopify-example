{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      },\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading\\u2026\"\n        });\n        if (error) return /*#__PURE__*/_jsx(\"div\", {\n          children: error.message\n        });\n        console.log(data);\n        return /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(ResourceList, {\n            showHeader: true,\n            resourceName: {\n              singular: 'Product',\n              plural: 'Products'\n            },\n            items: data.nodes,\n            renderItem: item => {\n              const media = /*#__PURE__*/_jsx(Thumbnail, {\n                source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n                alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n              });\n\n              const price = item.variants.edges[0].node.price;\n              return /*#__PURE__*/_jsx(ResourceList.Item, {\n                id: item.id,\n                media: media,\n                accessibilityLabel: `View details for ${item.title}`,\n                children: /*#__PURE__*/_jsxs(Stack, {\n                  children: [/*#__PURE__*/_jsx(Stack.Item, {\n                    fill: true,\n                    children: /*#__PURE__*/_jsx(\"h3\", {\n                      children: /*#__PURE__*/_jsx(TextStyle, {\n                        variation: \"strong\",\n                        children: item.title\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"$\", price]\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"Expires on \", twoWeeksFromNow, \" \"]\n                    })\n                  })]\n                })\n              });\n            }\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/brandonnutter/ampd/components/ResourceList.js"],"names":["gql","React","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","Component","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport {\n    Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    render() {\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n        return (\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n                {({ data, loading, error }) => {\n                    if (loading) return <div>Loadingâ€¦</div>;\n                    if (error) return <div>{error.message}</div>;\n                    console.log(data);\n                    return (\n                        <Card>\n                            <ResourceList\n                                showHeader\n                                resourceName={{ singular: 'Product', plural: 'Products' }}\n                                items={data.nodes}\n                                renderItem={item => {\n                                    const media = (\n                                        <Thumbnail\n                                            source={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.originalSrc\n                                                    : ''\n                                            }\n                                            alt={\n                                                item.images.edges[0]\n                                                    ? item.images.edges[0].node.altText\n                                                    : ''\n                                            }\n                                        />\n                                    );\n                                    const price = item.variants.edges[0].node.price;\n                                    return (\n                                        <ResourceList.Item\n                                            id={item.id}\n                                            media={media}\n                                            accessibilityLabel={`View details for ${item.title}`}\n                                        >\n                                            <Stack>\n                                                <Stack.Item fill>\n                                                    <h3>\n                                                        <TextStyle variation=\"strong\">\n                                                            {item.title}\n                                                        </TextStyle>\n                                                    </h3>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>${price}</p>\n                                                </Stack.Item>\n                                                <Stack.Item>\n                                                    <p>Expires on {twoWeeksFromNow} </p>\n                                                </Stack.Item>\n                                            </Stack>\n                                        </ResourceList.Item>\n                                    );\n                                }}\n                            />\n                        </Card>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}