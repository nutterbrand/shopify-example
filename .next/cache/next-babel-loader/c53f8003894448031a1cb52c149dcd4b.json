{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      store.set('ids', idsFromResources);\n    });\n  }\n\n  render() {\n    const emptyState = !store.get('ids');\n    return /*#__PURE__*/_jsxs(Page, {\n      children: [/*#__PURE__*/_jsx(TitleBar, {\n        title: \"Ampd\",\n        primaryAction: {\n          content: 'Select products',\n          onAction: () => this.setState({\n            open: true\n          })\n        }\n      }), /*#__PURE__*/_jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: resources => this.handleSelection(resources),\n        onCancel: () => this.setState({\n          open: false\n        })\n      }), emptyState ? /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsx(EmptyState, {\n          heading: \"Select products to start\",\n          action: {\n            content: 'Select products',\n            onAction: () => this.setState({\n              open: true\n            })\n          },\n          image: img,\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"Select products to change their price temporarily.\"\n          })\n        })\n      }) : /*#__PURE__*/_jsx(ResourceListWithProducts, {})]\n    });\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/brandonnutter/ampd/pages/index.js"],"names":["React","EmptyState","Layout","Page","ResourcePicker","TitleBar","store","ResourceListWithProducts","img","Index","Component","open","resources","idsFromResources","selection","map","product","id","setState","set","render","emptyState","get","content","onAction","state","handleSelection"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AAEA,MAAMC,GAAG,GAAG,mEAAZ;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCACxB;AAACC,MAAAA,IAAI,EAAE;AAAP,KADwB;;AAAA,6CAyCbC,SAAD,IAAe;AAC7B,YAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAA7C,CAAzB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAL,MAAAA,KAAK,CAACa,GAAN,CAAU,KAAV,EAAiBN,gBAAjB;AACH,KA7C+B;AAAA;;AAGhCO,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,CAACf,KAAK,CAACgB,GAAN,CAAU,KAAV,CAApB;AACA,wBACI,MAAC,IAAD;AAAA,8BACI,KAAC,QAAD;AACI,QAAA,KAAK,EAAC,MADV;AAEI,QAAA,aAAa,EAAE;AACXC,UAAAA,OAAO,EAAE,iBADE;AAEXC,UAAAA,QAAQ,EAAE,MAAM,KAAKN,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAd;AAFL;AAFnB,QADJ,eAQI,KAAC,cAAD;AACI,QAAA,YAAY,EAAC,SADjB;AAEI,QAAA,YAAY,EAAE,KAFlB;AAGI,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWd,IAHrB;AAII,QAAA,WAAW,EAAGC,SAAD,IAAe,KAAKc,eAAL,CAAqBd,SAArB,CAJhC;AAKI,QAAA,QAAQ,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAd;AALpB,QARJ,EAeKU,UAAU,gBACP,KAAC,MAAD;AAAA,+BACI,KAAC,UAAD;AACI,UAAA,OAAO,EAAC,0BADZ;AAEI,UAAA,MAAM,EAAE;AACJE,YAAAA,OAAO,EAAE,iBADL;AAEJC,YAAAA,QAAQ,EAAE,MAAM,KAAKN,QAAL,CAAc;AAAEP,cAAAA,IAAI,EAAE;AAAR,aAAd;AAFZ,WAFZ;AAMI,UAAA,KAAK,EAAEH,GANX;AAAA,iCAQI;AAAA;AAAA;AARJ;AADJ,QADO,gBAcP,KAAC,wBAAD,KA7BR;AAAA,MADJ;AAkCH;;AAvC+B;;AAgDpC,eAAeC,KAAf","sourcesContent":["import React from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n    state = {open: false};\n\n    render() {\n        const emptyState = !store.get('ids');\n        return (\n            <Page>\n                <TitleBar\n                    title=\"Ampd\"\n                    primaryAction={{\n                        content: 'Select products',\n                        onAction: () => this.setState({ open: true }),\n                    }}\n                />\n                <ResourcePicker\n                    resourceType=\"Product\"\n                    showVariants={false}\n                    open={this.state.open}\n                    onSelection={(resources) => this.handleSelection(resources)}\n                    onCancel={() => this.setState({ open: false })}\n                />\n                {emptyState ? (\n                    <Layout>\n                        <EmptyState\n                            heading=\"Select products to start\"\n                            action={{\n                                content: 'Select products',\n                                onAction: () => this.setState({ open: true }),\n                            }}\n                            image={img}\n                        >\n                            <p>Select products to change their price temporarily.</p>\n                        </EmptyState>\n                    </Layout>\n                ) : (\n                    <ResourceListWithProducts />\n                )}\n            </Page>\n        );\n    }\n\n    handleSelection = (resources) => {\n        const idsFromResources = resources.selection.map((product) => product.id);\n        this.setState({ open: false })\n        store.set('ids', idsFromResources);\n    };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}