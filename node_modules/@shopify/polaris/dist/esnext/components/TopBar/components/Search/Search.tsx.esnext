import React$1 from 'react';
import { useFeatures } from '../../../../utilities/features/hooks.tsx.esnext';
import { ThemeProvider as ThemeProvider$1 } from '../../../ThemeProvider/ThemeProvider.tsx.esnext';
import { classNames } from '../../../../utilities/css.ts.esnext';
import { SearchDismissOverlay as SearchDismissOverlay$1 } from '../SearchDismissOverlay/SearchDismissOverlay.tsx.esnext';
import styles from './Search.scss.esnext';

function Search({
  visible,
  children,
  onDismiss,
  overlayVisible = false
}) {
  const {
    newDesignLanguage
  } = useFeatures();

  if (children == null) {
    return null;
  }

  const overlayMarkup = visible ? /*#__PURE__*/React$1.createElement(SearchDismissOverlay$1, {
    onDismiss: onDismiss,
    visible: overlayVisible
  }) : null;
  return /*#__PURE__*/React$1.createElement(React$1.Fragment, null, overlayMarkup, /*#__PURE__*/React$1.createElement("div", {
    className: classNames(styles.Search, visible && styles.visible, newDesignLanguage && styles.newDesignLanguage)
  }, /*#__PURE__*/React$1.createElement(ThemeProvider$1, {
    theme: {
      colorScheme: 'dark'
    }
  }, /*#__PURE__*/React$1.createElement("div", {
    className: classNames(styles.SearchContent, newDesignLanguage && styles.newDesignLanguage)
  }, /*#__PURE__*/React$1.createElement("div", {
    className: styles.Results
  }, children)))));
}

export { Search };
