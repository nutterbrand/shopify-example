import React$1 from 'react';
import { classNames } from '../../../../utilities/css.ts.esnext';
import { buttonsFrom } from '../../../Button/utils.tsx.esnext';
import { ButtonGroup as ButtonGroup$1 } from '../../../ButtonGroup/ButtonGroup.tsx.esnext';
import { Stack as Stack$1 } from '../../../Stack/Stack.tsx.esnext';
import styles from '../../Card.scss.esnext';
import { Subheading as Subheading$1 } from '../../../Subheading/Subheading.tsx.esnext';

function Section({
  children,
  title,
  subdued,
  fullWidth,
  actions
}) {
  const className = classNames(styles.Section, subdued && styles['Section-subdued'], fullWidth && styles['Section-fullWidth']);
  const actionMarkup = actions ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, null, buttonsFrom(actions, {
    plain: true
  })) : null;
  const titleMarkup = typeof title === 'string' ? /*#__PURE__*/React$1.createElement(Subheading$1, null, title) : title;
  const titleAreaMarkup = titleMarkup || actionMarkup ? /*#__PURE__*/React$1.createElement("div", {
    className: styles.SectionHeader
  }, actionMarkup ? /*#__PURE__*/React$1.createElement(Stack$1, {
    alignment: "baseline"
  }, /*#__PURE__*/React$1.createElement(Stack$1.Item, {
    fill: true
  }, titleMarkup), actionMarkup) : titleMarkup) : null;
  return /*#__PURE__*/React$1.createElement("div", {
    className: className
  }, titleAreaMarkup, children);
}

export { Section };
