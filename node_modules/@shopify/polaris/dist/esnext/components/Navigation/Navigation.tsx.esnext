import React$1 from 'react';
import { useTheme } from '../../utilities/theme/hooks.tsx.esnext';
import { useFeatures } from '../../utilities/features/hooks.tsx.esnext';
import { classNames } from '../../utilities/css.ts.esnext';
import { Image as Image$1 } from '../Image/Image.tsx.esnext';
import { Scrollable as Scrollable$1 } from '../Scrollable/Scrollable.tsx.esnext';
import { UnstyledLink as UnstyledLink$1 } from '../UnstyledLink/UnstyledLink.tsx.esnext';
import { WithinContentContext } from '../../utilities/within-content-context.tsx.esnext';
import { getWidth as getWidth$1 } from '../../utilities/get-width.ts.esnext';
import { NavigationContext } from './context.tsx.esnext';
import styles from './Navigation.scss.esnext';
import { Item as Item$1 } from './components/Item/Item.tsx.esnext';
import { Section as Section$1 } from './components/Section/Section.tsx.esnext';

const Navigation = function Navigation({
  children,
  contextControl,
  location,
  onDismiss
}) {
  const {
    logo
  } = useTheme();
  const {
    newDesignLanguage
  } = useFeatures();
  const width = getWidth$1(logo, 104);
  const logoMarkup = logo ? /*#__PURE__*/React$1.createElement("div", {
    className: styles.LogoContainer
  }, /*#__PURE__*/React$1.createElement(UnstyledLink$1, {
    url: logo.url || '',
    className: styles.LogoLink,
    style: {
      width
    }
  }, /*#__PURE__*/React$1.createElement(Image$1, {
    source: logo.topBarSource || '',
    alt: logo.accessibilityLabel || '',
    className: styles.Logo,
    style: {
      width
    }
  }))) : null;
  const mediaMarkup = contextControl ? /*#__PURE__*/React$1.createElement("div", {
    className: styles.ContextControl
  }, contextControl) : logoMarkup;
  const className = classNames(styles.Navigation, newDesignLanguage && styles['Navigation-newDesignLanguage']);
  const context = {
    location,
    onNavigationDismiss: onDismiss
  };
  return /*#__PURE__*/React$1.createElement(NavigationContext.Provider, {
    value: context
  }, /*#__PURE__*/React$1.createElement(WithinContentContext.Provider, {
    value: true
  }, /*#__PURE__*/React$1.createElement("nav", {
    className: className
  }, mediaMarkup, /*#__PURE__*/React$1.createElement(Scrollable$1, {
    className: styles.PrimaryNavigation
  }, children))));
};
Navigation.Item = Item$1;
Navigation.Section = Section$1;

export { Navigation };
