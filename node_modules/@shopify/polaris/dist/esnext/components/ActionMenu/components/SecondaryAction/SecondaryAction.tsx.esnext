import React$1, { useRef, useEffect } from 'react';
import { useFeatures } from '../../../../utilities/features/hooks.tsx.esnext';
import { classNames } from '../../../../utilities/css.ts.esnext';
import { Button as Button$1 } from '../../../Button/Button.tsx.esnext';
import styles from './SecondaryAction.scss.esnext';

function SecondaryAction({
  children,
  onAction,
  getOffsetWidth,
  ...rest
}) {
  const {
    newDesignLanguage
  } = useFeatures();
  const secondaryActionsRef = useRef(null);
  useEffect(() => {
    var _secondaryActionsRef$;

    if (!getOffsetWidth || !secondaryActionsRef.current || !newDesignLanguage) return;
    getOffsetWidth((_secondaryActionsRef$ = secondaryActionsRef.current) == null ? void 0 : _secondaryActionsRef$.offsetWidth);
  }, [getOffsetWidth, newDesignLanguage]);
  return /*#__PURE__*/React$1.createElement("span", {
    className: classNames(styles.SecondaryAction, styles.newDesignLanguage),
    ref: secondaryActionsRef
  }, /*#__PURE__*/React$1.createElement(Button$1, Object.assign({
    onClick: onAction
  }, rest), children));
}

export { SecondaryAction };
