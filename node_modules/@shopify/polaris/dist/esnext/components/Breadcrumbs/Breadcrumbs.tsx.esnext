import React$1, { PureComponent } from 'react';
import { FeaturesContext } from '../../utilities/features/context.ts.esnext';
import { classNames } from '../../utilities/css.ts.esnext';
import { ArrowLeftMinor, ChevronLeftMinor } from '@shopify/polaris-icons';
import { handleMouseUpByBlurring } from '../../utilities/focus.ts.esnext';
import { Icon as Icon$1 } from '../Icon/Icon.tsx.esnext';
import { VisuallyHidden as VisuallyHidden$1 } from '../VisuallyHidden/VisuallyHidden.tsx.esnext';
import { UnstyledLink as UnstyledLink$1 } from '../UnstyledLink/UnstyledLink.tsx.esnext';
import styles from './Breadcrumbs.scss.esnext';

class Breadcrumbs extends PureComponent {
  constructor(...args) {
    super(...args);
    this.context = void 0;
  }

  render() {
    const {
      newDesignLanguage
    } = this.context || {};
    const {
      breadcrumbs
    } = this.props;
    const breadcrumb = breadcrumbs[breadcrumbs.length - 1];

    if (breadcrumb == null) {
      return null;
    }

    const {
      content
    } = breadcrumb;
    const contentMarkup = /*#__PURE__*/React$1.createElement("span", {
      className: styles.ContentWrapper
    }, /*#__PURE__*/React$1.createElement("span", {
      className: styles.Icon
    }, /*#__PURE__*/React$1.createElement(Icon$1, {
      source: newDesignLanguage ? ArrowLeftMinor : ChevronLeftMinor
    })), newDesignLanguage ? /*#__PURE__*/React$1.createElement(VisuallyHidden$1, null, content) : /*#__PURE__*/React$1.createElement("span", {
      className: styles.Content
    }, content));
    const breadcrumbClassNames = classNames(styles.Breadcrumb, newDesignLanguage && styles.newDesignLanguage);
    const breadcrumbMarkup = 'url' in breadcrumb ? /*#__PURE__*/React$1.createElement(UnstyledLink$1, {
      key: content,
      url: breadcrumb.url,
      className: breadcrumbClassNames,
      onMouseUp: handleMouseUpByBlurring,
      "aria-label": breadcrumb.accessibilityLabel
    }, contentMarkup) : /*#__PURE__*/React$1.createElement("button", {
      key: content,
      className: breadcrumbClassNames,
      onClick: breadcrumb.onAction,
      onMouseUp: handleMouseUpByBlurring,
      type: "button",
      "aria-label": breadcrumb.accessibilityLabel
    }, contentMarkup);
    return /*#__PURE__*/React$1.createElement("nav", {
      role: "navigation"
    }, breadcrumbMarkup);
  }

}
Breadcrumbs.contextType = FeaturesContext;

export { Breadcrumbs };
