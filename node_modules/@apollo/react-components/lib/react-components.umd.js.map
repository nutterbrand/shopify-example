{"version":3,"sources":["../src/Query.tsx","../src/Mutation.tsx","../src/Subscription.tsx"],"names":[],"mappings":"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","sourcesContent":["import { OperationVariables } from '@apollo/react-common';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { QueryComponentOptions } from './types';\n\nexport function Query<TData = any, TVariables = OperationVariables>(\n  props: QueryComponentOptions<TData, TVariables>\n) {\n  const { children, query, ...options } = props;\n  const result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\nexport namespace Query {\n  export const propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useMutation } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { MutationComponentOptions } from './types';\n\nexport function Mutation<TData = any, TVariables = OperationVariables>(\n  props: MutationComponentOptions<TData, TVariables>\n) {\n  const [runMutation, result] = useMutation(props.mutation, props);\n  return props.children ? props.children(runMutation, result) : null;\n}\n\nexport namespace Mutation {\n  export const propTypes = {\n    mutation: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    refetchQueries: PropTypes.oneOfType([\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n      ),\n      PropTypes.func\n    ]),\n    awaitRefetchQueries: PropTypes.bool,\n    update: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    fetchPolicy: PropTypes.string\n  };\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport { SubscriptionComponentOptions } from './types';\n\nexport function Subscription<TData = any, TVariables = OperationVariables>(\n  props: SubscriptionComponentOptions<TData, TVariables>\n) {\n  const result = useSubscription(props.subscription, props);\n  return props.children && result ? props.children(result) : null;\n}\n\nexport namespace Subscription {\n  export const propTypes = {\n    subscription: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    children: PropTypes.func,\n    onSubscriptionData: PropTypes.func,\n    onSubscriptionComplete: PropTypes.func,\n    shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  };\n}\n"]}