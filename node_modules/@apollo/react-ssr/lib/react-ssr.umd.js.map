{"version":3,"sources":["../src/getDataFromTree.ts","../src/renderToStringWithData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;WAIgB,e,CACd,I,EACA,O,EAAoC;AAApC,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAoC;;AAEpC,WAAO,iBAAiB,CAAC;AACvB,MAAA,IAAI,EAAA,IADmB;AAEvB,MAAA,OAAO,EAAA,OAFgB;AAKvB,MAAA,cAAc,EAAE,OAAO,CAAC,kBAAD,CAAP,CAA4B;AALrB,KAAD,CAAxB;AAOD;;AAQD,WAAgB,iBAAhB,CAAkC,EAAlC,EAO2B;QANzB,IAAA,GAAA,EAAA,CAAA,I;QACA,EAAA,GAAA,EAAA,CAAA,O;QAAA,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,E;QAIA,EAAA,GAAA,EAAA,CAAA,c;QAAA,cAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,OAAA,CAAA,kBAAA,CAAA,CAAA,oBAAA,GAAA,E;AAEA,QAAM,cAAc,GAAG,IAAI,0BAAJ,EAAvB;;AAEA,aAAS,OAAT,GAAgB;AAMd,UAAM,aAAa,GAAG,oCAAtB;AACA,UAAM,IAAI,GAAG,cAAc,CACzB,eAAM,aAAN,CACE,aAAa,CAAC,QADhB,EAEE;AAAE,QAAA,KAAK,EAAA,qBAAA,qBAAA,EAAA,EAAO,OAAP,CAAA,EAAc;AAAE,UAAA,cAAc,EAAA;AAAhB,SAAd;AAAP,OAFF,EAGE,IAHF,CADyB,CAA3B;AAQA,aAAO,cAAc,CAAC,WAAf,KACH,cAAc,CAAC,uBAAf,GAAyC,IAAzC,CAA8C,OAA9C,CADG,GAEH,IAFJ;AAGD;;AAED,WAAO,OAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,OAAvB,CAAP;AACD;;WCnDe,sB,CACd,S,EAA4B;AAE5B,WAAO,iBAAiB,CAAC;AACvB,MAAA,IAAI,EAAE,SADiB;AAEvB,MAAA,cAAc,EAAE,OAAO,CAAC,kBAAD,CAAP,CAA4B;AAFrB,KAAD,CAAxB;AAID,G","sourcesContent":["import React from 'react';\nimport { getApolloContext } from '@apollo/react-common';\nimport { RenderPromises } from '@apollo/react-hooks';\n\nexport function getDataFromTree(\n  tree: React.ReactNode,\n  context: { [key: string]: any } = {}\n) {\n  return getMarkupFromTree({\n    tree,\n    context,\n    // If you need to configure this renderFunction, call getMarkupFromTree\n    // directly instead of getDataFromTree.\n    renderFunction: require('react-dom/server').renderToStaticMarkup\n  });\n}\n\nexport type GetMarkupFromTreeOptions = {\n  tree: React.ReactNode;\n  context?: { [key: string]: any };\n  renderFunction?: (tree: React.ReactElement<any>) => string;\n};\n\nexport function getMarkupFromTree({\n  tree,\n  context = {},\n  // The rendering function is configurable! We use renderToStaticMarkup as\n  // the default, because it's a little less expensive than renderToString,\n  // and legacy usage of getDataFromTree ignores the return value anyway.\n  renderFunction = require('react-dom/server').renderToStaticMarkup\n}: GetMarkupFromTreeOptions): Promise<string> {\n  const renderPromises = new RenderPromises();\n\n  function process(): Promise<string> | string {\n    // Always re-render from the rootElement, even though it might seem\n    // better to render the children of the component responsible for the\n    // promise, because it is not possible to reconstruct the full context\n    // of the original rendering (including all unknown context provider\n    // elements) for a subtree of the original component tree.\n    const ApolloContext = getApolloContext();\n    const html = renderFunction(\n      React.createElement(\n        ApolloContext.Provider,\n        { value: { ...context, renderPromises } },\n        tree\n      )\n    );\n\n    return renderPromises.hasPromises()\n      ? renderPromises.consumeAndAwaitPromises().then(process)\n      : html;\n  }\n\n  return Promise.resolve().then(process);\n}\n","import { ReactElement } from 'react';\nimport { getMarkupFromTree } from './getDataFromTree';\n\nexport function renderToStringWithData(\n  component: ReactElement<any>\n): Promise<string> {\n  return getMarkupFromTree({\n    tree: component,\n    renderFunction: require('react-dom/server').renderToString\n  });\n}\n"]}